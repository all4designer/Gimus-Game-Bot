from db import *

questions = [
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –±—ã–ª –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π?",
    "–ü—Ä–æ–±–æ–≤–∞–ª –ª–∏ —Ç—ã —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫—É—é –µ–¥—É?",
    "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø—Ä—ã–≥–∞–ª —Å —Ç–∞—Ä–∑–∞–Ω–∫–æ–π?",
    "–ë—ã–ª –ª–∏ —Ç—ã –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–µ —Ç–≤–æ–µ–π –ª—é–±–∏–º–æ–π –≥—Ä—É–ø–ø—ã?",
    "–ò—Å–ø—ã—Ç—ã–≤–∞–ª –ª–∏ —Ç—ã —Å—Ç—Ä–∞—Ö –≤—ã—Å–æ—Ç—ã?",
    "–í—Å—Ç—Ä–µ—á–∞–ª—Å—è –ª–∏ —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å—é?",
    "–ü—Ä–æ–±–æ–≤–∞–ª –ª–∏ —Ç—ã –Ω–∞—É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É –≤–∏–¥—É —Å–ø–æ—Ä—Ç–∞?",
    "–ë—ã–ª –ª–∏ —Ç—ã –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–Ω–æ–π –ø—Ä–æ–≥—É–ª–∫–µ –≤ –≥–æ—Ä–∞—Ö?",
    "–ò–º–µ–ª –ª–∏ —Ç—ã –æ–ø—ã—Ç –≤–æ–∂–¥–µ–Ω–∏—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è?",
    "–ü—Ä–æ–±–æ–≤–∞–ª –ª–∏ —Ç—ã –≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–∞ –∏–∑ –¥—Ä—É–≥–æ–π –∫—É–ª—å—Ç—É—Ä—ã?"
]

actions = [
    "–°—Ç–∞–Ω—Ü—É–π –ø–æ–¥ –ª—é–±–∏–º—É—é –º–µ–ª–æ–¥–∏—é –Ω–∞ –º–µ—Å—Ç–µ",
    "–°—ã–≥—Ä–∞–π –Ω–∞ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ, –µ—Å–ª–∏ —É —Ç–µ–±—è –æ–Ω –µ—Å—Ç—å",
    "–ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å —Ä–∞–∑–≤–æ—Ä–æ—Ç –Ω–∞ –º–µ—Å—Ç–µ, –∫–∞–∫ –≤–æ–¥–∏—Ç–µ–ª—å —Ç–∞–∫—Å–∏",
    "–ù–∞—Ä–∏—Å—É–π –ø–æ—Ä—Ç—Ä–µ—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞ 2 –º–∏–Ω—É—Ç—ã",
    "–ü—Ä–æ—á–∏—Ç–∞–π –≤—Å–ª—É—Ö –æ—Ç—Ä—ã–≤–æ–∫ –∏–∑ –ª—é–±–∏–º–æ–π –∫–Ω–∏–≥–∏ –∏–ª–∏ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ",
    "–ó–∞–∂–≥–∏ —Å–≤–µ—á—É –∏ –ø–æ–∫–∞–∂–∏ —Å–≤–æ–π —Ç–∞–Ω–µ—Ü —Å–≤–µ—Ç–ª—è—á–∫–∞",
    "–°—ã–≥—Ä–∞–π –≤—Å–ø—ã—à–µ—á–Ω—É—é –∏–≥—Ä—É: —Å–¥–µ–ª–∞–π –Ω–∞–∏–±–æ–ª–µ–µ —Å–º–µ—à–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é",
    "–°—ã–≥—Ä–∞–π –º–∏–Ω–∏-–ø—å–µ—Å—É, –∏—Å–ø–æ–ª—å–∑—É—è –ª—é–±—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–æ–º–Ω–∞—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ—Å—Ç—é–º–æ–≤ –∏ –¥–µ–∫–æ—Ä–∞—Ü–∏–π",
    "–û—Ä–≥–∞–Ω–∏–∑—É–π —Å—Ç–µ–Ω–¥–∞–ø –∏ —Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É",
    "–ü–æ–¥–µ–ª–∏—Å—å —Å–∞–º–æ–π —Å–º–µ—à–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏–∑ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏"
]
@dp.callback_query_handler(lambda c: c.data in ['pravda', 'new_pravda'])
async def pravda(callback_query: types.CallbackQuery):
    message_id = callback_query.message.message_id
    user_id = callback_query.from_user.id
    data = callback_query.data

    if data == 'new_pravda':
        await win(user_id, 'pravda')

    keyboard = InlineKeyboardMarkup(row_width=2)
    buttons = [InlineKeyboardButton('ü™¨ –ü—Ä–∞–≤–¥–∞', callback_data='truth'),
               InlineKeyboardButton('üçÑ –î–µ–π—Å—Ç–≤–∏–µ', callback_data='action'),
               InlineKeyboardButton('üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='start'),
    ]
    keyboard.add(*buttons)

    await bot.edit_message_media(chat_id=user_id,
                                 message_id=message_id,
                                 media=types.InputMediaPhoto(media=open('pravda.jpg', 'rb'),
                                 caption="<b>–°–æ–±–µ—Ä–∏ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π —Ä—è–¥–æ–º.</b>\n\n–ü–æ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–∞–≤–¥–æ–π –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ–º:",
                                 parse_mode='HTML'),
                                 reply_markup=keyboard
    )
@dp.callback_query_handler(lambda c: c.data in ['truth', 'action'])
async def get_question_or_action(callback_query: types.CallbackQuery):
    message_id = callback_query.message.message_id
    user_id = callback_query.from_user.id
    data = callback_query.data

    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(InlineKeyboardButton('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ', callback_data='new_pravda'),
                 InlineKeyboardButton('üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='start'))

    if data == 'truth':
        text = random.choice(questions)
    elif data == 'action':
        text = random.choice(actions)
    await bot.edit_message_media(chat_id=user_id,
                                 message_id=message_id,
                                 media=types.InputMediaPhoto(media=open('pravda.jpg', 'rb'),
                                                             caption=f"{text}",
                                                             parse_mode='HTML'),
                                 reply_markup=keyboard
                                 )